/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author omar
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

const int N = 3e5+9,M = 1e9, OO = 1e9;

int arr[N];

class AIlyaAndAColorfulWalk {
public:
	void solve(std::istream& cin, std::ostream& cout) {
		cout << fixed << setprecision(2);
		ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
		int n;
		cin >> n;
		for (int i = 0; i < n; ++i) {
			cin >> arr[i];
		}
		int S = arr[0], E = arr[n-1], ans = 0;

		for (int i = 1; i < n; ++i) {
			if(arr[i] != S) {
				ans = max(ans, n-i-1);
			}
			if(arr[i] != E)
				ans = max(ans, i);
		}
		if(S != E)
			ans = n-1;
		cout << ans;
	}
};


int main() {
	AIlyaAndAColorfulWalk solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}